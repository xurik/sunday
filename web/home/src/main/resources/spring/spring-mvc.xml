<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="    
          http://www.springframework.org/schema/beans    
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
           http://www.springframework.org/schema/context    
           http://www.springframework.org/schema/context/spring-context-3.0.xsd   
           http://www.springframework.org/schema/mvc    
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
	default-autowire="byName">
	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->
	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/html/**" location="/html/" />
	<!-- 开启支持@NumberFormat @DateTimeFormat @Valid标注 ,@DateTimeFormat用于bean 日期属性的格式化,请查看: http://static.springsource.org/spring/docs/3.0.2.RELEASE/spring-framework-reference/htmlsingle/spring-framework-reference.html#mvc-config
    <mvc:annotation-driven validator="validator"/>
    -->
	<!-- ①：对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.alibaba.sunday" />

	<!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射，添加拦截器，类级别的处理器映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
                <!--
				<bean class="com.alibaba.china.rac.web.design.controller.DefaultHandlerInterceptor" />
				-->
			</list>
		</property>
	</bean>

	<!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射， 配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0" />
        <!--
		<property name="webBindingInitializer">  
            <bean class="com.alibaba.china.rac.web.design.util.MyWebBinding" />  
        </property>
          -->
		<!-- 配置一下对json数据的转换 -->
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
			</list>
		</property>
	</bean>

    <!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    	<property name="ignoreAcceptHeader" value="true"/>
		<property name="defaultContentType" value="text/html"/>
		
    	<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json;charset=GBK" />
				<entry key="xml" value="application/xml;charset=GBK" />
				<entry key="jsp" value="text/html;charset=GBK"/> 
              <entry key="do" value="text/html;charset=GBK"/>
			</map>
		</property>
		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="false"/>
		<!---->
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
					<property name="contentType" value="text/html;charset=GBK"></property>
					<property name="exposeSpringMacroHelpers" value="true"/>
					<property name="requestContextAttribute" value="rc"/>
					<property name="exposeRequestAttributes" value="true"/>
					<property name="allowRequestOverride" value="true"/>
					<property name="exposeSessionAttributes" value="true"/>
					<property name="suffix" value=".vm" />
					<property name="dateToolAttribute">
				      <value>dateTool</value>
				    </property>
				    <property name="numberToolAttribute">
				      <value>numberTool</value>
				    </property>
				    <property name="toolboxConfigLocation"> 
						<value>/WEB-INF/config/tools.xml</value> 
                   </property> 
				</bean>  
			</list>
		</property>
		
		<property name="defaultViews">
			<list>
				<!-- for application/json-->
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" >
                    <!--
				<property name="objectMapper">
						<bean class="org.codehaus.jackson.map.ObjectMapper" />
				</property>
                        -->
				</bean>

				<!-- for application/xml -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView" >
					<property name="marshaller">
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller"/>
					</property>
				</bean>
			</list>
		</property>
    </bean>
    <!-- 
	<bean class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
		<property name="basename" value="views" />
		<property name="order" value="0" />
	</bean>
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>-->
	<bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">  
    	<property name="resourceLoaderPath">  
      	<value>/WEB-INF/velocity</value>  
    	</property>  
		<property name="velocityProperties">  
            <props>  
                <prop key="input.encoding">GBK</prop>  
                <prop key="output.encoding">GBK</prop>  
                <prop key="contentType">text/html;charset=GBK</prop>  
                <prop key="file.resource.loader.cache">false</prop>  
                <prop key="file.resource.loader.modificationCheckInterval">1</prop>  
                <prop key="velocimacro.library.autoreload">true</prop>  
                <prop key="velocimacro.library">macro/gadgetconfig.vm,macro/gadgetinner.vm</prop>  
            </props>  
        </property>  
    </bean>  
    
    <!-- Mapping exception to the handler view -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
            </props>
        </property>
    </bean>

	<!-- ③：对模型视图名称的解析，即在模型视图名称添加前后缀 InternalResourceViewResolver默认的就是JstlView所以这里就不用配置viewClass了
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/"></property>
		<property name="suffix" value=".jsp">
		</property>
	</bean>
	 -->
</beans>